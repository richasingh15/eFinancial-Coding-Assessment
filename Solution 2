Part 2:
To Print Pascal’s Triangle: (JAVA)
Solution:
I am using JAVA to solve the above problem statement. According to the problem statement we have to print a PASCAL’s Triangle as below:
1 
1 1 
1 2 1 
1 3 3 1 
1 4 6 4 1 
1 5 10 10 5 1
Pascal's triangle is a triangular array of the binomial coefficients. Pascal's triangle is a never-ending equilateral triangle of numbers that follow a rule of adding the two numbers above to get the number below. Two of the sides are “all 1's” and because the triangle is infinite, there is no “bottom side.”
NOTE: If n=0 then the console will not print anything (Negative Test Case)
Please find the below solution for n = 6:

Code:
package efinancial_part2;

/**
 *
 * @author Richa Singh
 */
public class Efinancial_Part2 {

    /**
     * @param args the command line arguments
     */
   public static void main (String[] args) { 
        int n = 0; 
        int m = 6;
        int o = 2;
        int p = 3;
        printPascal(n);
        printPascal(m); 
        printPascal(o); 
        printPascal(p); 
    } 
  
public static void printPascal(int n) 
{ 
// An array to store generated pascal triangle values 
int[][] arr = new int[n][n];  
  
// Iterate through every line and print integer(s) in it 
for (int line = 0; line < n; line++) 
{ 
    // Every line has number of integers equal to line number 
    for (int i = 0; i <= line; i++) 
    { 
    // First and last values in every row are 1 
    if (line == i || i == 0) 
        arr[line][i] = 1; 
    else // Other values are sum of values just above and left of above 
        arr[line][i] = arr[line-1][i-1] + arr[line-1][i]; 
    System.out.print(arr[line][i]); 
    } 
    System.out.println(""); 
} 
} 

    
}
Output: (Test Case 1)
run:
1
11
121
1331
14641
15101051

Input: (Test Case 2)
n= 2
Output:
run:
1
11

Input: (Test Case 3)
n=3
Output: 
run:
1
11
121

